{"ast":null,"code":"var _jsxFileName = \"/home/saketh/Videos/part2/src/components/gat.component.js\";\n//import following packages before run this file\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport * as reac from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport Table from \"react-bootstrap/Table\"; //support files\n\nimport \"./GatApplication.css\";\nimport Navbar from \"./navbar1.component\";\nimport \"./profile.css\";\n/**\n * This class is to apply,display,edit GAT application.When user clicks\n * on GAT in dashboard,first it calls API by ComponentDidMount method and feteches whether user\n * already applied or not.If already applied then it displays the GAT application details\n * otherwise it allows user to fill GAT application.\n * ComponentDidMount method also checks whether the date crosses the last date to apply or not.\n * For modularity I write the render content in child components they are:\n * 1.Application(It constains gat application.It has two child components a.ApplyGAT b.ApplyGRE)\n *      a.ApplyGAT(it contains gat application like application no, test center)\n *      b.ApplyGRE(it contains gre application like gre scores)\n * 2.AppliedApp(User applied application details table)\n */\n\nexport default class GatApplication extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        examOpt: e.target.value\n      }); //when option changes from gre to gat, then it clears the fields\n\n      if (e.target.value === \"GAT\") {\n        this.setState({\n          quantVerbal: \"\",\n          quantVerbalError: false,\n          analytical: \"\",\n          analyticalError: false\n        });\n      }\n    };\n\n    this.handleDropdownChange = selectedOption => {\n      this.setState({\n        testCenter: selectedOption.value\n      });\n    };\n\n    this.handleChange = e => {\n      if (e.target.name === \"quantVerbal\") {\n        console.log(\"notnumber\");\n        this.validateQuantVerbal(e.target.value);\n      }\n\n      if (e.target.name === \"analytical\") {\n        this.validateAnalytical(e.target.value);\n      }\n    };\n\n    this.editApplication = () => {\n      this.setState({\n        applied: false\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(\"can\", event.target.name);\n      console.log(\"backend call\");\n      const email = localStorage.getItem(\"email\");\n      const {\n        applicationNo,\n        examOpt,\n        testCenter,\n        analytical,\n        quantVerbal\n      } = this.state;\n      const gatDetails = {\n        email: email,\n        applicationNo: applicationNo,\n        testCenter: testCenter,\n        appType: examOpt,\n        analytical: analytical,\n        quantVerbal: quantVerbal\n      };\n      axios.post(\"https://flask-deploy-admissions.herokuapp.com/gatDetails\", gatDetails).then(result => {\n        if (result.data.status == \"inserted\") {\n          this.setState({\n            paymentStatus: result.data.payment,\n            appType: examOpt,\n            applied: true\n          });\n          alert(\"inserted successfully\");\n        } else if (result.data.status == \"updated\") {\n          this.setState({\n            paymentStatus: result.data.payment,\n            appType: examOpt,\n            applied: true\n          });\n          alert(\"updated successfully\");\n        } else {\n          alert(result.data.status);\n        }\n      }).catch(error => {\n        console.log(error);\n        alert(error);\n      });\n    };\n\n    this.state = {\n      examOpt: \"\",\n      applicationNo: \"\",\n      testCenter: \"\",\n      paymentStatus: \"\",\n      //for gre scores\n      quantVerbal: \"\",\n      analytical: \"\",\n      //this field is used as flag that user already applied or not. If user already applied\n      //then it sets to true\n      applied: null,\n      //this field is used as flag i.e when the last date crosses then it sets to false\n      isValidDate: true\n    };\n  }\n  /**\n   * It have two duities. One to fetch data from API immediately when user opens this page.\n   * Second one is two check whether last date is over or not immediately when user opens this page.\n   */\n\n\n  async componentDidMount() {\n    const {\n      applied\n    } = this.state; //getting email from localstorage in browser\n\n    const email = localStorage.getItem(\"email\");\n    const details = {\n      email: email\n    }; //API call to fetch data whether user already applied or not\n\n    const res = await axios.post(\"https://flask-deploy-admissions.herokuapp.com/gatApplication\", details).then(response => {\n      console.log(\"success\");\n      const data = response.data;\n      const gatDetails = data.gatDetails;\n      console.log(\"gatdetails\", gatDetails);\n\n      if (data.applied) {\n        console.log(\"appno\", gatDetails.appNo);\n        this.setState({\n          applicationNo: gatDetails.appNo,\n          testCenter: gatDetails.testCenter,\n          appType: gatDetails.examType,\n          analytical: gatDetails.greAnalytical,\n          quantVerbal: gatDetails.greScore,\n          paymentStatus: gatDetails.paymentStatus,\n          applied: true\n        });\n      } else {\n        this.setState({\n          applicationNo: data.appNo,\n          applied: false\n        });\n      }\n    }); //For checking last date\n\n    var presentDate = new Date();\n    var lastDate = new Date(new Date(\"7/28/2020 00:00\")); //mm/dd/yyyy\n\n    if (presentDate.getTime() > lastDate.getTime()) {\n      console.log(\"date over\");\n      this.setState({\n        isValidDate: false\n      });\n    }\n  }\n  /**\n   * This method sets the examopt when users selects one of the exam either gat or gre.\n   * When user selects gre then it sets examopt to GRE.It enables the respective application\n   * page.\n   * @param {*} e event\n   */\n\n\n  //to check quantVerbal score input is valid or not\n  validateQuantVerbal(quantVerbal) {\n    if (quantVerbal < 301 || quantVerbal > 340) {\n      this.setState({\n        quantVerbalError: true,\n        quantVerbal: quantVerbal\n      });\n    } else {\n      this.setState({\n        quantVerbalError: false,\n        quantVerbal: quantVerbal\n      });\n    }\n  } //to check analytical score input is valid or not\n\n\n  validateAnalytical(analytical) {\n    if (analytical < 3.5 || analytical > 6) {\n      this.setState({\n        analyticalError: true,\n        analytical: analytical\n      });\n    } else {\n      this.setState({\n        analyticalError: false,\n        analytical: analytical\n      });\n    }\n  }\n  /**\n   * This method is to edit the applied application\n   */\n\n\n  /**\n   * This is our main render method. Here we calls two child components.\n   * One is Application(It constains gat application.It has two child components a.ApplyGAT b.ApplyGRE)\n   *  and second one is AppliedApp(User applied application details table)\n   */\n  render() {\n    const userDetails = JSON.parse(localStorage.getItem(\"state\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      width: \"1250px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"view-account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"module\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"side-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-profile img-circle img-responsive center-block\",\n      id: \"pp\",\n      src: userDetails.image_url,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"meta list list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }\n    }, userDetails.full_name)), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, userDetails.email)))), /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"side-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"nav-link\",\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 27\n      }\n    }), \" Profile\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"nav-link\",\n      to: \"/gat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-th\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 27\n      }\n    }), \" GAT\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"nav-link\",\n      to: \"/walkin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-clock-o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 27\n      }\n    }), \" Walkin\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"pro-label label label-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }\n    }, \"GAT\")), /*#__PURE__*/React.createElement(Application, {\n      applied: this.state.applied,\n      examOpt: this.state.examOpt,\n      applicationNo: this.state.applicationNo,\n      quantVerbal: this.state.quantVerbal,\n      analytical: this.state.analytical,\n      quantVerbalError: this.state.quantVerbalError,\n      analyticalError: this.state.analyticalError,\n      isValidDate: this.state.isValidDate,\n      buttonDisabled: this.state.buttonDisabled,\n      onChange: this.onChange,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      handleDropdownChange: this.handleDropdownChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AppliedApp, {\n      applied: this.state.applied,\n      applicationNo: this.state.applicationNo,\n      quantVerbal: this.state.quantVerbal,\n      analytical: this.state.analytical,\n      testCenter: this.state.testCenter,\n      paymentStatus: this.state.paymentStatus,\n      appType: this.state.appType,\n      editApplication: this.editApplication,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }\n    })))))));\n  }\n\n}\n\nconst Application = props => {\n  console.log(\"gat\", props.isValidDate);\n\n  if (props.isValidDate & props.applied == null) {\n    console.log(\"null\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 12\n      }\n    });\n  } else if (props.isValidDate && !props.applied) {\n    return /*#__PURE__*/React.createElement(reac.Container, {\n      className: \"main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(reac.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reac.Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"note-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }\n    }, \"Dear Applicant, You have two ways to get Admission into MSIT\", /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 15\n      }\n    }, \"GAT is the regular entrance test will be conducted for admission into MSIT.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 15\n      }\n    }, \"Entrance Test Waived for the candidates with GRE scores above\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    }, \"301/340\"), \" or equivalent old scores also considered.(GRE should have been taken after\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }\n    }, \"2016\"), \").\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }\n    }, \"Please select your choice!!\"), /*#__PURE__*/React.createElement(reac.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reac.Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(reac.Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"GAT\",\n      checked: props.examOpt === \"GAT\",\n      name: \"exam\",\n      onChange: props.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }\n    }), \"GAT\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"GRE\",\n      checked: props.examOpt === \"GRE\",\n      name: \"exam\",\n      onChange: props.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }\n    }), \"GRE\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(reac.Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(reac.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reac.Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(reac.Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ApplyGAT, {\n      examOpt: props.examOpt,\n      applicationNo: props.applicationNo,\n      handleDropdownChange: props.handleDropdownChange,\n      handleSubmit: props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ApplyGRE, {\n      applicationNo: props.applicationNo,\n      examOpt: props.examOpt,\n      quantVerbal: props.quantVerbal,\n      quantVerbalError: props.quantVerbalError,\n      analytical: props.analytical,\n      analyticalError: props.analyticalError,\n      handleChange: props.handleChange,\n      handleSubmit: props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(reac.Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }\n    })));\n  } else if (props.isValidDate && props.applied) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 7\n      }\n    }, \"Dear Applicant you applied for GAT\");\n  } else {\n    console.log(\"else\");\n    return /*#__PURE__*/React.createElement(reac.Container, {\n      className: \"main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }\n    }, \"You cannot apply now. Last date for GAT exam is MAY 25, 2020\")));\n  }\n};\n\nconst options = [{\n  value: \"Hyderabad\",\n  label: \"Hyderabad\"\n}, {\n  value: \"Kakinada\",\n  label: \"Kakinada\"\n}, {\n  value: \"Home\",\n  label: \"Home\"\n}];\n\nconst ApplyGAT = props => {\n  if (props.examOpt === \"GAT\") {\n    return /*#__PURE__*/React.createElement(reac.Form, {\n      onSubmit: props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      id: \"alerts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(reac.Form.Group, {\n      className: \"formBasicUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reac.Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }\n    }, \"Application Number*\"), /*#__PURE__*/React.createElement(reac.Form.Control, {\n      type: \"text\",\n      name: \"name\",\n      className: \"form-control\",\n      readOnly: true,\n      value: props.applicationNo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(reac.Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }\n    }, \"Test Centre*\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      options: options,\n      onChange: props.handleDropdownChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reac.Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }\n    }, \"Apply\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(reac.Button, {\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nconst ApplyGRE = props => {\n  if (props.examOpt === \"GRE\") {\n    return /*#__PURE__*/React.createElement(reac.Form, {\n      onSubmit: props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      id: \"alerts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(reac.Form.Group, {\n      className: \"formBasicUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reac.Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }\n    }, \"Application Number\"), /*#__PURE__*/React.createElement(reac.Form.Control, {\n      type: \"text\",\n      readOnly: true,\n      value: props.applicationNo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(reac.Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reac.Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }\n    }, \"Quant + Verbal\"), /*#__PURE__*/React.createElement(reac.Form.Control, {\n      type: \"number\",\n      pattern: \"[0-9]*\",\n      inputmode: \"numeric\",\n      name: \"quantVerbal\",\n      placeholder: \"more than 301\",\n      required: true,\n      value: props.quantVerbal,\n      onChange: props.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }\n    }), props.quantVerbalError ? /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\",\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 13\n      }\n    }, \"You should have between 301-340\") : \"\"), /*#__PURE__*/React.createElement(reac.Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reac.Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 11\n      }\n    }, \"Analytical\"), /*#__PURE__*/React.createElement(reac.Form.Control, {\n      type: \"number\",\n      pattern: \"[0-9]*\",\n      inputmode: \"numeric\",\n      name: \"analytical\",\n      placeholder: \"more than 3.5\",\n      required: true,\n      value: props.analytical,\n      onChange: props.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }\n    }), props.analyticalError ? /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\",\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 13\n      }\n    }, \"You should have between 3.5 - 6.0\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reac.Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 11\n      }\n    }, \"Apply\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(reac.Button, {\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nconst AppliedApp = props => {\n  let applicationNo = props.applicationNo;\n  let testCenter = props.testCenter;\n  let paymentStatus = props.paymentStatus;\n  let appType = props.appType;\n  let button = /*#__PURE__*/React.createElement(reac.Button, {\n    onClick: props.editApplication,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 16\n    }\n  });\n\n  if (props.applied && props.payment != \"paid\") {\n    button = /*#__PURE__*/React.createElement(reac.Button, {\n      onClick: props.editApplication,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 7\n      }\n    }, \"CLICK HERE TO EDIT YOUR APPLICATION\");\n  }\n\n  if (!props.applied) {\n    applicationNo = \"\";\n    testCenter = \"\";\n    paymentStatus = \"\";\n    appType = \"\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }\n  }, \"Your Gat Application Details\"), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 13\n    }\n  }, \"Application Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 13\n    }\n  }, \"Test Center\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 13\n    }\n  }, \"Payment Details\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 13\n    }\n  }, \"Exam Type\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 13\n    }\n  }, applicationNo), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 13\n    }\n  }, testCenter), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 13\n    }\n  }, paymentStatus), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 13\n    }\n  }, appType)), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"editButton\",\n    colSpan: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 13\n    }\n  }, button)))));\n};","map":{"version":3,"sources":["/home/saketh/Videos/part2/src/components/gat.component.js"],"names":["React","Component","axios","Link","reac","Select","Table","Navbar","GatApplication","constructor","onChange","e","setState","examOpt","target","value","quantVerbal","quantVerbalError","analytical","analyticalError","handleDropdownChange","selectedOption","testCenter","handleChange","name","console","log","validateQuantVerbal","validateAnalytical","editApplication","applied","handleSubmit","event","preventDefault","email","localStorage","getItem","applicationNo","state","gatDetails","appType","post","then","result","data","status","paymentStatus","payment","alert","catch","error","isValidDate","componentDidMount","details","res","response","appNo","examType","greAnalytical","greScore","presentDate","Date","lastDate","getTime","render","userDetails","JSON","parse","image_url","full_name","buttonDisabled","Application","props","options","label","ApplyGAT","color","display","justifyContent","ApplyGRE","fontSize","AppliedApp","button","textAlign"],"mappings":"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","sourcesContent":["//import following packages before run this file\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport * as reac from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport Table from \"react-bootstrap/Table\";\n//support files\nimport \"./GatApplication.css\";\nimport Navbar from \"./navbar1.component\";\nimport \"./profile.css\";\n\n\n/**\n * This class is to apply,display,edit GAT application.When user clicks\n * on GAT in dashboard,first it calls API by ComponentDidMount method and feteches whether user\n * already applied or not.If already applied then it displays the GAT application details\n * otherwise it allows user to fill GAT application.\n * ComponentDidMount method also checks whether the date crosses the last date to apply or not.\n * For modularity I write the render content in child components they are:\n * 1.Application(It constains gat application.It has two child components a.ApplyGAT b.ApplyGRE)\n *      a.ApplyGAT(it contains gat application like application no, test center)\n *      b.ApplyGRE(it contains gre application like gre scores)\n * 2.AppliedApp(User applied application details table)\n */\nexport default class GatApplication extends Component {\n  constructor() {\n    super();\n    this.state = {\n      examOpt: \"\",\n      applicationNo: \"\",\n      testCenter: \"\",\n      paymentStatus: \"\",\n      //for gre scores\n      quantVerbal: \"\",\n      analytical: \"\",\n      //this field is used as flag that user already applied or not. If user already applied\n      //then it sets to true\n      applied: null,\n      //this field is used as flag i.e when the last date crosses then it sets to false\n      isValidDate: true,\n    };\n  }\n\n  /**\n   * It have two duities. One to fetch data from API immediately when user opens this page.\n   * Second one is two check whether last date is over or not immediately when user opens this page.\n   */\n  async componentDidMount() {\n    const { applied } = this.state;\n    //getting email from localstorage in browser\n    const email = localStorage.getItem(\"email\");\n    const details = {\n      email: email,\n    };\n    //API call to fetch data whether user already applied or not\n    const res = await axios\n      .post(\"https://flask-deploy-admissions.herokuapp.com/gatApplication\", details)\n      .then((response) => {\n        console.log(\"success\");\n        const data = response.data;\n        const gatDetails = data.gatDetails;\n        console.log(\"gatdetails\", gatDetails);\n        if (data.applied) {\n          console.log(\"appno\", gatDetails.appNo);\n          this.setState({\n            applicationNo: gatDetails.appNo,\n            testCenter: gatDetails.testCenter,\n            appType: gatDetails.examType,\n            analytical: gatDetails.greAnalytical,\n            quantVerbal: gatDetails.greScore,\n            paymentStatus: gatDetails.paymentStatus,\n            applied: true,\n          });\n        } else {\n          this.setState({\n            applicationNo: data.appNo,\n            applied: false,\n          });\n        }\n      });\n    //For checking last date\n    var presentDate = new Date();\n    var lastDate = new Date(new Date(\"7/28/2020 00:00\"));\n    //mm/dd/yyyy\n    if (presentDate.getTime() > lastDate.getTime()) {\n      console.log(\"date over\");\n      this.setState({\n        isValidDate: false,\n      });\n    }\n  }\n  /**\n   * This method sets the examopt when users selects one of the exam either gat or gre.\n   * When user selects gre then it sets examopt to GRE.It enables the respective application\n   * page.\n   * @param {*} e event\n   */\n  onChange = (e) => {\n    this.setState({\n      examOpt: e.target.value,\n    });\n    //when option changes from gre to gat, then it clears the fields\n    if (e.target.value === \"GAT\") {\n      this.setState({\n        quantVerbal: \"\",\n        quantVerbalError: false,\n        analytical: \"\",\n        analyticalError: false,\n      });\n    }\n  };\n  //this is to select testcenters\n  handleDropdownChange = (selectedOption) => {\n    this.setState({ testCenter: selectedOption.value });\n  };\n  /**\n   * When user selects GRE and starts filling application, He need to enter quantative & verbal score\n   * and analytical score. This functions checks whether input is valid or not.\n   * If any invalid input then it sets error message otherwise it sets input into state variable\n   * @param {*} e event\n   * It calls th emethods validateQuantVerbal(quantVerbal),validateAnalytical(analytical)\n   */\n  handleChange = (e) => {\n    if (e.target.name === \"quantVerbal\") {\n      console.log(\"notnumber\");\n      this.validateQuantVerbal(e.target.value);\n    }\n    if (e.target.name === \"analytical\") {\n      this.validateAnalytical(e.target.value);\n    }\n  };\n  //to check quantVerbal score input is valid or not\n  validateQuantVerbal(quantVerbal) {\n    if (quantVerbal < 301 || quantVerbal > 340) {\n      this.setState({\n        quantVerbalError: true,\n        quantVerbal: quantVerbal,\n      });\n    } else {\n      this.setState({\n        quantVerbalError: false,\n        quantVerbal: quantVerbal,\n      });\n    }\n  }\n  //to check analytical score input is valid or not\n  validateAnalytical(analytical) {\n    if (analytical < 3.5 || analytical > 6) {\n      this.setState({\n        analyticalError: true,\n        analytical: analytical,\n      });\n    } else {\n      this.setState({\n        analyticalError: false,\n        analytical: analytical,\n      });\n    }\n  }\n  /**\n   * This method is to edit the applied application\n   */\n  editApplication = () => {\n    this.setState({\n      applied: false,\n    });\n  };\n  /**\n   * After user filled the application, when he clicks on apply then\n   * this method was called.This method send the user application details to API\n   * and if it receives status code 200 then it shows application submited sucessfully\n   * @param {*} event\n   */\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"can\", event.target.name);\n    console.log(\"backend call\");\n    const email = localStorage.getItem(\"email\");\n    const {\n      applicationNo,\n      examOpt,\n      testCenter,\n      analytical,\n      quantVerbal,\n    } = this.state;\n    const gatDetails = {\n      email: email,\n      applicationNo: applicationNo,\n      testCenter: testCenter,\n      appType: examOpt,\n      analytical: analytical,\n      quantVerbal: quantVerbal,\n    };\n\n    axios\n      .post(\"https://flask-deploy-admissions.herokuapp.com/gatDetails\", gatDetails)\n      .then((result) => {\n        if (result.data.status == \"inserted\") {\n          this.setState({\n            paymentStatus: result.data.payment,\n            appType: examOpt,\n            applied: true,\n          });\n          alert(\"inserted successfully\");\n        } else if (result.data.status == \"updated\") {\n          this.setState({\n            paymentStatus: result.data.payment,\n            appType: examOpt,\n            applied: true,\n          });\n          alert(\"updated successfully\");\n        } else {\n          alert(result.data.status);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(error);\n      });\n  };\n  /**\n   * This is our main render method. Here we calls two child components.\n   * One is Application(It constains gat application.It has two child components a.ApplyGAT b.ApplyGRE)\n   *  and second one is AppliedApp(User applied application details table)\n   */\n  render() {\n    const userDetails = JSON.parse(localStorage.getItem(\"state\"));\n    \n    return (\n      <div>\n        <Navbar />\n        <br></br>\n        <br></br>\n        <br></br>\n  \n    <div className=\"container\" width=\"1250px\">\n    <div className=\"view-account\">\n      <section className=\"module\">\n        <div className=\"module-inner\">\n          <div className=\"side-bar\"     >\n\n             <div className=\"user-info\">\n\n                <img\n                  className=\"img-profile img-circle img-responsive center-block\"\n                  id = \"pp\"\n                  src={userDetails.image_url}\n                  alt=\"\"\n                ></img>\n                <ul className=\"meta list list-unstyled\">\n                  <li className=\"name\">\n                    <h4>{userDetails.full_name}</h4>\n                  </li>\n                  <li className=\"email\">\n                    <a href >{userDetails.email}</a>\n                  </li>\n                  {/* <label className=\"label label-info\">Applicant</label> */      }\n\n                </ul>\n            </div>\n\n                  <nav className=\"side-menu\">\n                    <ul className=\"nav\">\n                     <li>\n                      <Link className=\"nav-link\" to={\"/profile\"}>\n                          <span className=\"fa fa-user\"></span> Profile                      \n                          </Link>\n                      </li>   \n\n                      <li className=\"active\">\n                      <Link className=\"nav-link\" to={\"/gat\"}>\n                          <span className=\"fa fa-th\"></span> GAT\n                          </Link>\n                      </li>\n                      <li>\n                      <Link className=\"nav-link\" to={\"/walkin\"}>\n                          <span className=\"fa fa-clock-o\"></span> Walkin                      \n                          </Link>\n                      </li>\n                      {/* <li>\n                      <a href >\n                          <span className=\"fa fa-cog\"></span> Edit Profile\n                          </a>\n                      </li> */}\n              </ul>\n            </nav>\n          </div>\n          <div className=\"content-panel\">\n            <h2 className=\"title\">\n              {/* Profile */}\n              <span className=\"pro-label label label-warning\">GAT</span>\n            </h2>\n        <Application\n          applied={this.state.applied}\n          examOpt={this.state.examOpt}\n          applicationNo={this.state.applicationNo}\n          quantVerbal={this.state.quantVerbal}\n          analytical={this.state.analytical}\n          quantVerbalError={this.state.quantVerbalError}\n          analyticalError={this.state.analyticalError}\n          isValidDate={this.state.isValidDate}\n          buttonDisabled={this.state.buttonDisabled}\n          onChange={this.onChange}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n          handleDropdownChange={this.handleDropdownChange}\n        />\n        <AppliedApp\n          applied={this.state.applied}\n          applicationNo={this.state.applicationNo}\n          quantVerbal={this.state.quantVerbal}\n          analytical={this.state.analytical}\n          testCenter={this.state.testCenter}\n          paymentStatus={this.state.paymentStatus}\n          appType={this.state.appType}\n          editApplication={this.editApplication}\n        />\n             </div>\n        </div>\n      </section>\n    </div>\n  </div>\n     \n      </div>\n    );\n  }\n}\nconst Application = (props) => {\n  console.log(\"gat\", props.isValidDate);\n  if (props.isValidDate & (props.applied == null)) {\n    console.log(\"null\");\n    return <div></div>;\n  } else if (props.isValidDate && !props.applied) {\n    return (        \n\n          <reac.Container className=\"main-content\">\n        <reac.Row>\n          <reac.Col>\n            <h5 className=\"note-box\">\n              Dear Applicant, You have two ways to get Admission into MSIT\n              <li>\n                GAT is the regular entrance test will be conducted for admission\n                into MSIT.\n              </li>\n              <li>\n                Entrance Test Waived for the candidates with GRE scores above{\" \"}\n                <strong>301/340</strong> or equivalent old scores also\n                considered.(GRE should have been taken after{\" \"}\n                <strong>2016</strong>\n                ).\n              </li>\n            </h5>\n          </reac.Col>\n        </reac.Row>\n        <br></br>\n        <h5>Please select your choice!!</h5>\n        <reac.Row>\n          <reac.Col></reac.Col>\n          <reac.Col>\n            <div className=\"radio-div\">\n              <label className=\"radio\">\n                <input\n                  type=\"radio\"\n                  value=\"GAT\"\n                  checked={props.examOpt === \"GAT\"}\n                  name=\"exam\"\n                  onChange={props.onChange}\n                />\n                GAT\n              </label>\n              <br></br>\n\n              <label className=\"radio\">\n                <input\n                  type=\"radio\"\n                  value=\"GRE\"\n                  checked={props.examOpt === \"GRE\"}\n                  name=\"exam\"\n                  onChange={props.onChange}\n                />\n                GRE\n              </label>\n            </div>\n            <div className=\"radio\"></div>\n          </reac.Col>\n          <reac.Col></reac.Col>\n        </reac.Row>\n        <reac.Row>\n          <reac.Col></reac.Col>\n          <reac.Col>\n            <ApplyGAT\n              examOpt={props.examOpt}\n              applicationNo={props.applicationNo}\n              handleDropdownChange={props.handleDropdownChange}\n              handleSubmit={props.handleSubmit}\n            />\n            <ApplyGRE\n              applicationNo={props.applicationNo}\n              examOpt={props.examOpt}\n              quantVerbal={props.quantVerbal}\n              quantVerbalError={props.quantVerbalError}\n              analytical={props.analytical}\n              analyticalError={props.analyticalError}\n              handleChange={props.handleChange}\n              handleSubmit={props.handleSubmit}\n            />\n          </reac.Col>\n          <reac.Col></reac.Col>\n        </reac.Row>\n      </reac.Container>\n     \n    );\n  } else if (props.isValidDate && props.applied) {\n    return (\n      <div className=\"main-content\">Dear Applicant you applied for GAT</div>\n    );\n  } else {\n    console.log(\"else\");\n    return (\n      <reac.Container className=\"main-content\">\n        <div>\n          <h5>You cannot apply now. Last date for GAT exam is MAY 25, 2020</h5>\n        </div>\n      </reac.Container>\n    );\n  }\n};\n\nconst options = [\n  { value: \"Hyderabad\", label: \"Hyderabad\" },\n  { value: \"Kakinada\", label: \"Kakinada\" },\n  { value: \"Home\", label: \"Home\" },\n];\nconst ApplyGAT = (props) => {\n  if (props.examOpt === \"GAT\") {\n    return (\n      <reac.Form onSubmit={props.handleSubmit}>\n        <br></br>\n        <p style={{ color: \"red\" }} id=\"alerts\"></p>\n        <reac.Form.Group className=\"formBasicUsername\">\n          <reac.Form.Label>Application Number*</reac.Form.Label>\n          <reac.Form.Control\n            type=\"text\"\n            name=\"name\"\n            className=\"form-control\"\n            readOnly\n            value={props.applicationNo}\n          />\n        </reac.Form.Group>\n        <reac.Form.Group>\n          <label>Test Centre*</label>\n          <div>\n            <div>\n              <div>\n                <Select\n                  options={options}\n                  onChange={props.handleDropdownChange}\n                />\n              </div>\n            </div>\n          </div>\n        </reac.Form.Group>\n        <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n          <reac.Button variant=\"primary\" type=\"submit\">\n            Apply\n          </reac.Button>\n          <Link to=\"/profile\">\n            <reac.Button variant=\"primary\">Cancel</reac.Button>\n          </Link>\n        </div>\n      </reac.Form>\n    );\n  } else {\n    return <div></div>;\n  }\n};\nconst ApplyGRE = (props) => {\n  if (props.examOpt === \"GRE\") {\n    return (\n      <reac.Form onSubmit={props.handleSubmit}>\n        <br></br>\n        <p style={{ color: \"red\" }} id=\"alerts\"></p>\n        <reac.Form.Group className=\"formBasicUsername\">\n          <reac.Form.Label>Application Number</reac.Form.Label>\n          <reac.Form.Control type=\"text\" readOnly value={props.applicationNo} />\n        </reac.Form.Group>\n        <reac.Form.Group controlId=\"formBasicEmail\">\n          <reac.Form.Label>Quant + Verbal</reac.Form.Label>\n          <reac.Form.Control\n            type=\"number\"\n            pattern=\"[0-9]*\"\n            inputmode=\"numeric\"\n            name=\"quantVerbal\"\n            placeholder=\"more than 301\"\n            required={true}\n            value={props.quantVerbal}\n            onChange={props.handleChange}\n          />\n          {props.quantVerbalError ? (\n            <span style={{ color: \"red\", fontSize: 12 }}>\n              You should have between 301-340\n            </span>\n          ) : (\n            \"\"\n          )}\n        </reac.Form.Group>\n        <reac.Form.Group controlId=\"formBasicEmail\">\n          <reac.Form.Label>Analytical</reac.Form.Label>\n          <reac.Form.Control\n            type=\"number\"\n            pattern=\"[0-9]*\"\n            inputmode=\"numeric\"\n            name=\"analytical\"\n            placeholder=\"more than 3.5\"\n            required={true}\n            value={props.analytical}\n            onChange={props.handleChange}\n          />\n          {props.analyticalError ? (\n            <span style={{ color: \"red\", fontSize: 12 }}>\n              You should have between 3.5 - 6.0\n            </span>\n          ) : (\n            \"\"\n          )}\n        </reac.Form.Group>\n        <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n          <reac.Button variant=\"primary\" type=\"submit\">\n            Apply\n          </reac.Button>\n          <Link to=\"/profile\">\n            <reac.Button variant=\"primary\">Cancel</reac.Button>\n          </Link>\n        </div>\n      </reac.Form>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n\nconst AppliedApp = (props) => {\n  let applicationNo = props.applicationNo;\n  let testCenter = props.testCenter;\n  let paymentStatus = props.paymentStatus;\n  let appType = props.appType;\n  let button = <reac.Button onClick={props.editApplication}></reac.Button>;\n  if (props.applied && props.payment != \"paid\") {\n    button = (\n      <reac.Button onClick={props.editApplication}>\n        CLICK HERE TO EDIT YOUR APPLICATION\n      </reac.Button>\n    );\n  }\n  if (!props.applied) {\n    applicationNo = \"\";\n    testCenter = \"\";\n    paymentStatus = \"\";\n    appType = \"\";\n  }\n\n  return (\n    <div className=\"table\">\n      <h5 style={{ textAlign: \"center\" }}>Your Gat Application Details</h5>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Application Number</th>\n            <th>Test Center</th>\n            <th>Payment Details</th>\n            <th>Exam Type</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>{applicationNo}</td>\n            <td>{testCenter}</td>\n            <td>{paymentStatus}</td>\n            <td>{appType}</td>\n          </tr>\n          <tr>\n            <td className=\"editButton\" colSpan=\"4\">\n              {button}\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}