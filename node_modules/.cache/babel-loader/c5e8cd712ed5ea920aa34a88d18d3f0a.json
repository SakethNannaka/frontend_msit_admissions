{"ast":null,"code":"var _jsxFileName = \"/home/saketh/Videos/part2/src/components/changepassword.component.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport * as reac from 'react-bootstrap';\nimport logo from \"./logo.gif\";\nimport Navbar from \"./navbar1.component\";\nexport default class ChangePassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: \"\",\n      confirmpassword: \"\"\n    };\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n    document.getElementById(\"pwd\").innerHTML = \"\";\n  }\n\n  onChangeConfirmPassword(e) {\n    this.setState({\n      confirmpassword: e.target.value\n    });\n    document.getElementById(\"pwd\").innerHTML = \"\";\n  }\n\n  validatePassword(inp) {\n    if (inp.length >= 6 && inp.match(/[A-Z]/) && inp.match(/[a-z]/) && inp.match(/[0-9]/) && inp.match(/[!@#$%^&*()_+\\-=\\\\[\\]{};':\"\\\\|,.<>\\\\//?]+/)) {\n      return true;\n    } else {\n      // alert(\"Password should consist of one upper case and lower case letter,\" + \n      // \"one number, one special character and min length should be 6 chars\");    //The pop up alert for a valid email address\n      document.getElementById(\"pwd\").innerHTML = \"Password should consist of one upper case and lower case letter,one number, one special character and min length should be 6 chars\";\n      this.setState({\n        password: \"\",\n        confirmpassword: \"\"\n      });\n      return false;\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.password !== this.state.confirmpassword) {\n      // alert(\"passwords doesn't match\")\n      document.getElementById(\"pwd\").innerHTML = \"passwords doesn't match\";\n      return false; // The form won't submit\n    }\n\n    if (this.validatePassword(this.state.password)) {\n      const User = {\n        email: localStorage.getItem('email'),\n        password: this.state.password\n      };\n      console.log(User);\n      axios.post('https://flask-deploy-admissions.herokuapp.com/changepassword', User).then(res => {\n        if (res.data.message === 'sucessfully updated password') {\n          // alert(res.data.message)\n          document.getElementById(\"pwd\").innerHTML = \"Password updated\";\n          window.location = '/profile';\n        } else {\n          // alert(res.data.message)\n          document.getElementById(\"pwd\").innerHTML = res.data.message;\n          this.setState({\n            email: \"\",\n            password: \"\",\n            confirmpassword: \"\"\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(reac.Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(reac.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(reac.Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(reac.Col, {\n      style: {\n        margin: \"150px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://msitprogram.net/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      alt: \"msitlogo\",\n      height: \"50px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(reac.Form, {\n      onSubmit: this.onSubmit,\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"ChangePassword\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(reac.Form.Group, {\n      controlId: \"formBasicPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(reac.Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(reac.Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      autoComplete: \"password\",\n      onChange: this.onChangePassword,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(reac.Form.Text, {\n      id: \"pwd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(reac.Form.Group, {\n      controlId: \"formBasicConfirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(reac.Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(reac.Form.Control, {\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Re enter password\",\n      value: this.state.confirmpassword,\n      onChange: this.onChangeConfirmPassword,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(reac.Form.Text, {\n      id: \"cfmpwd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(reac.Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(reac.Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/saketh/Videos/part2/src/components/changepassword.component.js"],"names":["React","Component","axios","reac","logo","Navbar","ChangePassword","constructor","props","state","password","confirmpassword","onChangePassword","bind","onChangeConfirmPassword","onSubmit","e","setState","target","value","document","getElementById","innerHTML","validatePassword","inp","length","match","preventDefault","User","email","localStorage","getItem","console","log","post","then","res","data","message","window","location","render","margin"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport * as reac from 'react-bootstrap';\nimport logo from \"./logo.gif\";\n\nimport Navbar from \"./navbar1.component\"\n\nexport default class ChangePassword extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            password: \"\",\n            confirmpassword: \"\"\n        }\n        \n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChangePassword(e) {\n        this.setState({password: e.target.value});\n        document.getElementById(\"pwd\").innerHTML = \"\";\n    }\n\n    onChangeConfirmPassword(e) {\n        this.setState({confirmpassword: e.target.value});\n        document.getElementById(\"pwd\").innerHTML = \"\";\n    }\n\n    validatePassword(inp) {\n        if (inp.length >= 6 && inp.match(/[A-Z]/) && inp.match(/[a-z]/) && inp.match(/[0-9]/) && inp.match(/[!@#$%^&*()_+\\-=\\\\[\\]{};':\"\\\\|,.<>\\\\//?]+/)) {\n            return true\n        } else {\n            // alert(\"Password should consist of one upper case and lower case letter,\" + \n            // \"one number, one special character and min length should be 6 chars\");    //The pop up alert for a valid email address\n            document.getElementById(\"pwd\").innerHTML = \"Password should consist of one upper case and lower case letter,one number, one special character and min length should be 6 chars\";\n            this.setState({\n                password:\"\",\n                confirmpassword:\"\"\n            })\n            return false;\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        if(this.state.password !== this.state.confirmpassword){\n            // alert(\"passwords doesn't match\")\n            document.getElementById(\"pwd\").innerHTML = \"passwords doesn't match\";\n            return false; // The form won't submit\n        }\n\n        if (this.validatePassword(this.state.password)) {\n            const User = {\n                email: localStorage.getItem('email'),\n                password: this.state.password\n            }\n            console.log(User)\n            axios.post('https://flask-deploy-admissions.herokuapp.com/changepassword', User)\n            .then(res => {\n                if (res.data.message === 'sucessfully updated password') {\n                // alert(res.data.message)\n                document.getElementById(\"pwd\").innerHTML = \"Password updated\";\n                window.location = '/profile'\n            } else {\n                // alert(res.data.message)\n                document.getElementById(\"pwd\").innerHTML = res.data.message\n                this.setState({\n                    email:\"\",\n                    password:\"\",\n                    confirmpassword:\"\"\n                })\n            }\n        });\n    }\n}\n    render() {\n        return (\n            <div>\n                \n            <Navbar />\n            <reac.Container>\n            <reac.Row>\n              <reac.Col></reac.Col>\n              <reac.Col style = {{margin: \"150px\"}}>\n              <div className = \"ml-auto\">\n                        <a href=\"https://msitprogram.net/\">\n                          <img src={logo} alt = \"msitlogo\" height = \"50px\"/>\n                        </a>\n                </div>\n                <br></br>\n                <reac.Form onSubmit = {this.onSubmit} className = \"login-form\">\n                <h3>ChangePassword</h3>\n                <br></br>\n\n                <reac.Form.Group controlId=\"formBasicPassword\">\n                    <reac.Form.Label>Password</reac.Form.Label>\n                    <reac.Form.Control type=\"password\" placeholder=\"Password\" name = \"password\" autoComplete=\"password\" onChange = {this.onChangePassword} required/>\n                </reac.Form.Group>\n                <reac.Form.Text id = \"pwd\"></reac.Form.Text>\n                <reac.Form.Group controlId=\"formBasicConfirmPassword\">\n                    <reac.Form.Label>Confirm Password</reac.Form.Label>\n                    <reac.Form.Control type=\"password\" className=\"form-control\" placeholder=\"Re enter password\" value = {this.state.confirmpassword} onChange = {this.onChangeConfirmPassword} required/>\n                </reac.Form.Group>\n                <reac.Form.Text id = \"cfmpwd\"></reac.Form.Text>\n                <br></br>\n                <br></br>\n                <reac.Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </reac.Button>\n            </reac.Form>\n            </reac.Col>\n            <reac.Col></reac.Col>\n            </reac.Row>\n        </reac.Container>\n        </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}