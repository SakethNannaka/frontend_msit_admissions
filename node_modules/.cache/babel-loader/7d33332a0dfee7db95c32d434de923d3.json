{"ast":null,"code":"var _jsxFileName = \"/home/saketh/Videos/part2/src/components/forgotPassword.js\";\nimport React from \"react\";\nimport axios from \"axios\"; //imported files\n\nimport logo from \"./logo.gif\"; //ui\n\nimport * as reac from \"react-bootstrap\";\nimport \"./profile.css\";\n/**\n * This page is for changing password whenever forgot it.It requires registered mail.\n * When user enters the registered mail and click on 'get OTP' button then he gets an otp\n * to registered mail.When otp sent to mail user gets an alert message that 'check the mail for otp'\n * Then he have to enter the OTP, new password and confirm password.\n * Lastly click on update password.Then he get a alert message that 'password is updated sucessfully'.\n */\n\nclass ForgotPassword extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        newPassword,\n        cnfPassword\n      } = this.state;\n      console.log(\"pass\", newPassword);\n      console.log(\"new\", cnfPassword);\n\n      if (newPassword !== cnfPassword) {\n        document.getElementById(\"alerts\").innerHTML = \"Confirm password didn't match\";\n        return;\n      }\n\n      console.log(\"okay\");\n      this.setState({\n        buttonDisabled: true\n      });\n      const loginData = {\n        email: this.state.email,\n        password: this.state.newPassword\n      };\n      axios.post(\"https://flask-deploy-admissions.herokuapp.com/changepassword\", loginData).then(response => {\n        this.setState({\n          buttonDisabled: false\n        });\n        let data = response.data;\n\n        if (data.statuscode === 200) {\n          alert(\"Password Updated Sucessfully\");\n          window.location = \"/login\"; //this.props.history.push(\"/login\")\n        } else {\n          alert(\"Updation failed!! Please enter password again\");\n        }\n      }).catch(error => {\n        console.log(error);\n        alert(\"Something went wrong!! please try again\");\n      });\n    };\n\n    this.getOTP = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const emailId = {\n        email: this.state.email\n      };\n      axios.post(\"https://flask-deploy-admissions.herokuapp.com/forgot\", emailId).then(response => {\n        let data = response.data;\n\n        if (data.statuscode === 200) {\n          alert(\"Otp sent to your registered email\");\n          this.setState({\n            newOtp: data.otp,\n            loading: false,\n            updating: false,\n            buttonDisabled: false\n          });\n        } else {\n          document.getElementById(\"alerts\").innerHTML = \"Please enter correct registered mail\";\n          this.setState({\n            loading: false\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          loading: false\n        });\n        alert(\"Something went wrong!! please try again\");\n      });\n    };\n\n    this.updateEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.updatePassword = event => {\n      this.validateOtp();\n      this.setState({\n        newPassword: event.target.value\n      });\n    };\n\n    this.updateCnfPassword = event => {\n      this.validatePassword();\n      this.setState({\n        cnfPassword: event.target.value\n      });\n    };\n\n    this.updateOTP = event => {\n      this.setState({\n        otp: event.target.value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      otp: \"\",\n      newOtp: \"\",\n      newPassword: \"\",\n      cnfPassword: \"\",\n      errors: {},\n      //loading field is to avoid multiple clicks on button.\n      //It avoid duplicate operations and increase stability\n      loading: false,\n      //updating field also disabled the enter otp, newpassword fields untill user get\n      //alert message that 'otp sent to registered mail'. Then updating changes to false and\n      // that fields become active to enter data.\n      updating: true,\n      buttonDisabled: true\n    };\n  }\n\n  validatePassword() {\n    let {\n      newPassword\n    } = this.state;\n\n    if (newPassword.length >= 6 && newPassword.match(/[A-Z]/) && newPassword.match(/[a-z]/) && newPassword.match(/[0-9]/) && newPassword.match(/[!@#$%^&*()_+\\-=\\\\[\\]{};':\"\\\\|,.<>\\\\//?]+/)) {\n      document.getElementById(\"alerts\").innerHTML = \"\";\n      return true;\n    } else {\n      document.getElementById(\"alerts\").innerHTML = \"please enter a valid password in which it should consist of one upper case letter, one lower case letter,\" + \"one number, one special character and min length should be 6 chars\";\n      return false;\n    }\n  }\n\n  validateOtp() {\n    const {\n      newOtp,\n      otp\n    } = this.state;\n\n    if (newOtp !== otp) {\n      document.getElementById(\"alerts\").innerHTML = \"otp doesn't match\";\n      return false;\n    } else {\n      document.getElementById(\"alerts\").innerHTML = \"\";\n      return true;\n    }\n  }\n  /**\n   * This method is to submit email and updated password details to server.\n   * First we checked both the new password and confirm password are same otherwise it gives\n   * an alert message that 'confirm password doen't match' and ask user correct credentials.\n   * Then w\n   */\n\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(reac.Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(reac.Row, {\n      style: {\n        justifyContent: \"center\",\n        justifyItems: \"center\",\n        margin: \"100px\",\n        padding: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://msitprogram.net/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      alt: \"msitprogram\",\n      height: \"50px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      id: \"alerts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(reac.Form.Group, {\n      className: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(reac.Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"emailOtp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(reac.Form.Control, {\n      type: \"email\",\n      variant: \"outlined\",\n      size: \"small\",\n      value: this.state.email,\n      onChange: this.updateEmail,\n      placeholder: \"eg: xyz@gmail.com\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(reac.Button, {\n      // variant=\"contained\"\n      disabled: this.state.loading,\n      className: \"otp\",\n      onClick: this.getOTP,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, \"Get OTP\"))), /*#__PURE__*/React.createElement(reac.Form, {\n      onSubmit: this.handleSubmit,\n      class: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(reac.Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, \"Enter OTP:\"), /*#__PURE__*/React.createElement(reac.Form.Control, {\n      type: \"text\",\n      placeholder: \"One Time Password\",\n      value: this.state.otp,\n      onChange: this.updateOTP,\n      disabled: this.state.updating,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(reac.Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, \" New Password:\"), /*#__PURE__*/React.createElement(reac.Form.Control, {\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.updatePassword,\n      placeholder: \"eg: Aa@123aZXct\",\n      disabled: this.state.updating,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(reac.Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, \"Confirm New Password:\"), /*#__PURE__*/React.createElement(reac.Form.Control, {\n      type: \"password\",\n      placeholder: \"Re-enter password\",\n      value: this.state.cnfPassword,\n      onChange: this.updateCnfPassword,\n      disabled: this.state.updating,\n      required: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(reac.Button, {\n      type: \"submit\",\n      disabled: this.state.buttonDisabled,\n      variant: \"primary\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }, \"Update Password\"))))));\n  }\n  /**\n   * These methods to update the state variables when user enters anything\n   * in the respective field.\n   */\n\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/home/saketh/Videos/part2/src/components/forgotPassword.js"],"names":["React","axios","logo","reac","ForgotPassword","Component","constructor","handleSubmit","event","preventDefault","newPassword","cnfPassword","state","console","log","document","getElementById","innerHTML","setState","buttonDisabled","loginData","email","password","post","then","response","data","statuscode","alert","window","location","catch","error","getOTP","loading","emailId","newOtp","otp","updating","updateEmail","target","value","updatePassword","validateOtp","updateCnfPassword","validatePassword","updateOTP","errors","length","match","render","justifyContent","justifyItems","margin","padding","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n//imported files\nimport logo from \"./logo.gif\";\n//ui\nimport * as reac from \"react-bootstrap\";\nimport \"./profile.css\"\n\n/**\n * This page is for changing password whenever forgot it.It requires registered mail.\n * When user enters the registered mail and click on 'get OTP' button then he gets an otp\n * to registered mail.When otp sent to mail user gets an alert message that 'check the mail for otp'\n * Then he have to enter the OTP, new password and confirm password.\n * Lastly click on update password.Then he get a alert message that 'password is updated sucessfully'.\n */\n\nclass ForgotPassword extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      otp: \"\",\n      newOtp: \"\",\n      newPassword: \"\",\n      cnfPassword: \"\",\n      errors: {},\n      //loading field is to avoid multiple clicks on button.\n      //It avoid duplicate operations and increase stability\n      loading: false,\n      //updating field also disabled the enter otp, newpassword fields untill user get\n      //alert message that 'otp sent to registered mail'. Then updating changes to false and\n      // that fields become active to enter data.\n      updating: true,\n      buttonDisabled: true,\n    };\n  }\n  validatePassword() {\n    let { newPassword } = this.state;\n    if (\n      newPassword.length >= 6 &&\n      newPassword.match(/[A-Z]/) &&\n      newPassword.match(/[a-z]/) &&\n      newPassword.match(/[0-9]/) &&\n      newPassword.match(/[!@#$%^&*()_+\\-=\\\\[\\]{};':\"\\\\|,.<>\\\\//?]+/)\n    ) {\n      document.getElementById(\"alerts\").innerHTML = \"\";\n      return true;\n    } else {\n      document.getElementById(\"alerts\").innerHTML =\n        \"please enter a valid password in which it should consist of one upper case letter, one lower case letter,\" +\n        \"one number, one special character and min length should be 6 chars\";\n      return false;\n    }\n  }\n  validateOtp() {\n    const { newOtp, otp } = this.state;\n    if (newOtp !== otp) {\n      document.getElementById(\"alerts\").innerHTML = \"otp doesn't match\";\n      return false;\n    } else {\n      document.getElementById(\"alerts\").innerHTML = \"\";\n      return true;\n    }\n  }\n  /**\n   * This method is to submit email and updated password details to server.\n   * First we checked both the new password and confirm password are same otherwise it gives\n   * an alert message that 'confirm password doen't match' and ask user correct credentials.\n   * Then w\n   */\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { newPassword, cnfPassword } = this.state;\n    console.log(\"pass\", newPassword);\n    console.log(\"new\", cnfPassword);\n    if (newPassword !== cnfPassword) {\n      document.getElementById(\"alerts\").innerHTML =\n        \"Confirm password didn't match\";\n      return;\n    }\n    console.log(\"okay\");\n    this.setState({\n      buttonDisabled: true,\n    });\n    const loginData = {\n      email: this.state.email,\n      password: this.state.newPassword,\n    };\n    axios\n      .post(\"https://flask-deploy-admissions.herokuapp.com/changepassword\", loginData)\n      .then((response) => {\n        this.setState({\n          buttonDisabled: false,\n        });\n        let data = response.data;\n        if (data.statuscode === 200) {\n          alert(\"Password Updated Sucessfully\");\n          window.location = \"/login\";\n          //this.props.history.push(\"/login\")\n        } else {\n          alert(\"Updation failed!! Please enter password again\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(\"Something went wrong!! please try again\");\n      });\n  };\n\n  /**\n   * This method to get OTP. When user enters registered mail and click on the 'Get OTP'\n   * then it calls this method. It disable the multiple submissions using 'loading' variable.\n   * Secondly, It sends post request to server along with entered email. If server sends otp sucessfully\n   * then it returns success and an alert message shows to user that \"Otp sent to your registered email\".\n   */\n  getOTP = (event) => {\n    event.preventDefault();\n    this.setState({\n      loading: true,\n    });\n    const emailId = {\n      email: this.state.email,\n    };\n    axios\n      .post(\"https://flask-deploy-admissions.herokuapp.com/forgot\", emailId)\n      .then((response) => {\n        let data = response.data;\n        if (data.statuscode === 200) {\n          alert(\"Otp sent to your registered email\");\n          this.setState({\n            newOtp: data.otp,\n            loading: false,\n            updating: false,\n            buttonDisabled: false,\n          });\n        } else {\n          document.getElementById(\"alerts\").innerHTML =\n            \"Please enter correct registered mail\";\n          this.setState({\n            loading: false,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          loading: false,\n        });\n        alert(\"Something went wrong!! please try again\");\n      });\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <reac.Container>\n        <reac.Row style = {{justifyContent: \"center\", justifyItems: \"center\",  margin: \"100px\", padding: \"20px\"}}>\n          {/* <reac.Col></reac.Col>\n          <reac.Col style={{ margin: \"100px\", padding: \"40px 55px 45px 55px\" }}> */}\n          <div>\n          <div>\n              <a href=\"https://msitprogram.net/\">\n                <img src={logo} alt={\"msitprogram\"} height=\"50px\" />\n              </a>\n            </div>\n            <br></br>\n            <h4 align=\"center\">Forgot Password</h4>\n            <br></br>\n            <p style={{ color: \"red\" }} id=\"alerts\"></p>\n            <reac.Form.Group className=\"formBasicEmail\">\n              <reac.Form.Label>Email</reac.Form.Label>\n              <div className=\"emailOtp\">\n                <reac.Form.Control\n                  type=\"email\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  value={this.state.email}\n                  onChange={this.updateEmail}\n                  placeholder=\"eg: xyz@gmail.com\"\n                  required\n                />\n                <br></br>\n                {/*This button is imported from materials-ui@core. It is used alternative to input tag*/}\n                <reac.Button\n                  // variant=\"contained\"\n                  disabled={this.state.loading}\n                  className=\"otp\"\n                  onClick={this.getOTP}\n                  variant=\"primary\"\n                >\n                  Get OTP\n                </reac.Button>\n              </div>\n            </reac.Form.Group>\n            {/*This form contains fields 'enter otp', 'new password' and 'confirm password'*/}\n            <reac.Form onSubmit={this.handleSubmit} class=\"content\">\n              <div className=\"form-group\">\n                <reac.Form.Label>Enter OTP:</reac.Form.Label>\n                <reac.Form.Control\n                  type=\"text\"\n                  placeholder=\"One Time Password\"\n                  value={this.state.otp}\n                  onChange={this.updateOTP}\n                  disabled={this.state.updating}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <reac.Form.Label> New Password:</reac.Form.Label>\n                <reac.Form.Control\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.updatePassword}\n                  placeholder=\"eg: Aa@123aZXct\"\n                  disabled={this.state.updating}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <reac.Form.Label>Confirm New Password:</reac.Form.Label>\n                <reac.Form.Control\n                  type=\"password\"\n                  placeholder=\"Re-enter password\"\n                  value={this.state.cnfPassword}\n                  onChange={this.updateCnfPassword}\n                  disabled={this.state.updating}\n                  required=\"true\"\n                />\n              </div>\n              <br></br>\n              <div className=\"login-button\">\n                <reac.Button\n                  type=\"submit\"\n                  disabled={this.state.buttonDisabled}\n                  variant=\"primary\"\n                  block\n                >\n                  Update Password\n                </reac.Button>\n              </div>\n            </reac.Form>\n          {/* </reac.Col>\n          <reac.Col></reac.Col> */}\n          </div>\n        </reac.Row>\n      </reac.Container>\n    );\n  }\n\n  /**\n   * These methods to update the state variables when user enters anything\n   * in the respective field.\n   */\n  updateEmail = (event) => {\n    this.setState({\n      email: event.target.value,\n    });\n  };\n  updatePassword = (event) => {\n    this.validateOtp();\n    this.setState({\n      newPassword: event.target.value,\n    });\n  };\n  updateCnfPassword = (event) => {\n    this.validatePassword();\n    this.setState({\n      cnfPassword: event.target.value,\n    });\n  };\n  updateOTP = (event) => {\n    this.setState({\n      otp: event.target.value,\n    });\n  };\n}\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}